// <auto-generated />
using System;
using LessonsBg.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LessonsBg.Core.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221206135553_UserLocationExtend")]
    partial class UserLocationExtend
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LessonsBg.Core.Data.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeachingLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "a7dd4bf4-813f-48f4-ba1e-dccffb6d4e27",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9e0ed8b4-c2bd-46a4-aceb-173a45d3bbe8",
                            Email = "niki_admin@niki.bg",
                            EmailConfirmed = true,
                            FirstName = "Николай",
                            LastName = "Иванов",
                            LockoutEnabled = false,
                            NormalizedEmail = "NIKI_ADMIN@NIKI.BG",
                            NormalizedUserName = "NIKI_ADMIN@NIKI.BG",
                            PasswordHash = "AQAAAAEAACcQAAAAEDEcJohIxdaH51S9l8brwZGfh6mM4Boq2G+Qs3Hu44b/vRGGC4NPOJ5OKI9fKxhmhA==",
                            PhoneNumber = "0891111111",
                            PhoneNumberConfirmed = true,
                            ProfileImage = "https://i.imgur.com/zqWjZFV.png",
                            SecurityStamp = "d23f8645-0bcc-4561-8bda-1eaa8fc9efc7",
                            TeachingLocation = "Онлайн",
                            TwoFactorEnabled = false,
                            UserName = "niki_admin@niki.bg"
                        });
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.ApplicationUserCourse", b =>
                {
                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationUserId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("ApplicationUserCourse");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.ApplicationUserSubject", b =>
                {
                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationUserId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ApplicationUserSubject");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.ApplicationUserTraining", b =>
                {
                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("TrainingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationUserId", "TrainingId");

                    b.HasIndex("TrainingId");

                    b.ToTable("ApplicationUserTraining");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.BlogComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key.");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("Author ID");

                    b.Property<Guid>("BlogPostId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("BlogPost ID");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasComment("Blog comment text.");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasComment("Date of creation of the blog commment.");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BlogPostId");

                    b.ToTable("BlogComments");

                    b.HasComment("Comments under a blog post.");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.BlogPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Primary key.");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasComment("Date of creation of the post.");

                    b.Property<string>("PostText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The post text.");

                    b.Property<string>("PostTextHeadingImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The leading image of the post.");

                    b.Property<string>("PostThumbnailURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The thumbnail image of the post.");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("The title of the post.");

                    b.HasKey("Id");

                    b.ToTable("BlogPosts");

                    b.HasComment("Blog posts.");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Primary key");

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Description of the course.");

                    b.Property<string>("CourseImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Course image.");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("Name of the course.");

                    b.Property<int>("CourseTypeId")
                        .HasColumnType("int")
                        .HasComment("Type of the course.");

                    b.Property<int>("LocationId")
                        .HasColumnType("int")
                        .HasComment("Location of the course.");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Phone number to call if you are interested in the course.");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Website link with additional information about the course.");

                    b.HasKey("Id");

                    b.HasIndex("CourseTypeId");

                    b.HasIndex("LocationId");

                    b.ToTable("Courses");

                    b.HasComment("Courses");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.CourseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key.");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Course type.");

                    b.HasKey("Id");

                    b.ToTable("CourseTypes");

                    b.HasComment("Course type");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Пиано"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Пеене"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Танци"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Microsoft Excel"
                        },
                        new
                        {
                            Id = 5,
                            Type = "Компютърна грамотност"
                        },
                        new
                        {
                            Id = 6,
                            Type = "Microsoft Word"
                        },
                        new
                        {
                            Id = 7,
                            Type = "Microsoft Powerpoint"
                        },
                        new
                        {
                            Id = 8,
                            Type = "Adobe Photoshop"
                        },
                        new
                        {
                            Id = 9,
                            Type = "Adobe Illustrator"
                        });
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key.");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("City name.");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("City region.");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasComment("Locations (cities in Bulgaria and their regions).");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Онлайн",
                            Region = "Онлайн"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Айтос",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Аксаково",
                            Region = "Варна"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Алфатар",
                            Region = "Силистра"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Антоново",
                            Region = "Търговище"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Априлци",
                            Region = "Ловеч"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Ардино",
                            Region = "Кърджали"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Асеновград",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Ахелой",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Ахтопол",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Балчик",
                            Region = "Добрич"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Банкя",
                            Region = "София град"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Банско",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Баня",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Батак",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Батановци",
                            Region = "Перник"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Белене",
                            Region = "Плевен"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Белица",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Белово",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Белоградчик",
                            Region = "Видин"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Белослав",
                            Region = "Варна"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Берковица",
                            Region = "Монтана"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Благоевград",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Бобов дол",
                            Region = "Кюстендил"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Бобошево",
                            Region = "Кюстендил"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Божурище",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Бойчиновци",
                            Region = "Монтана"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Болярово",
                            Region = "Ямбол"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Борово",
                            Region = "Русе"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Ботевград",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Брацигово",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Брегово",
                            Region = "Видин"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Брезник",
                            Region = "Перник"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Брезово",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Брусарци",
                            Region = "Монтана"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Бургас",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Бухово",
                            Region = "София град"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Българово",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Бяла",
                            Region = "Варна"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Бяла",
                            Region = "Русе"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Бяла Слатина",
                            Region = "Враца"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Бяла Черква",
                            Region = "Велико Търново"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Варна",
                            Region = "Варна"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Велики Преслав",
                            Region = "Шумен"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Велико Търново",
                            Region = "Велико Търново"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Велинград",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Ветово",
                            Region = "Русе"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Ветрен",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Видин",
                            Region = "Видин"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Враца",
                            Region = "Враца"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Вълчедръм",
                            Region = "Монтана"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Вълчи дол",
                            Region = "Варна"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Върбица",
                            Region = "Шумен"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Вършец",
                            Region = "Монтана"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Габрово",
                            Region = "Габрово"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Генерал Тошево",
                            Region = "Добрич"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Главиница",
                            Region = "Силистра"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Глоджево",
                            Region = "Русе"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Годеч",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Горна Оряховица",
                            Region = "Велико Търново"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Гоце Делчев",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Грамада",
                            Region = "Видин"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Гулянци",
                            Region = "Плевен"
                        },
                        new
                        {
                            Id = 64,
                            Name = "Гурково",
                            Region = "Стара Загора"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Гълъбово",
                            Region = "Стара Загора"
                        },
                        new
                        {
                            Id = 66,
                            Name = "Две могили",
                            Region = "Русе"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Дебелец",
                            Region = "Велико Търново"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Девин",
                            Region = "Смолян"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Девня",
                            Region = "Варна"
                        },
                        new
                        {
                            Id = 70,
                            Name = "Джебел",
                            Region = "Кърджали"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Димитровград",
                            Region = "Хасково"
                        },
                        new
                        {
                            Id = 72,
                            Name = "Димово",
                            Region = "Видин"
                        },
                        new
                        {
                            Id = 73,
                            Name = "Добринище",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = 74,
                            Name = "Добрич",
                            Region = "Добрич"
                        },
                        new
                        {
                            Id = 75,
                            Name = "Долна баня",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 76,
                            Name = "Долна Митрополия",
                            Region = "Плевен"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Долна Оряховица",
                            Region = "Велико Търново"
                        },
                        new
                        {
                            Id = 78,
                            Name = "Долни Дъбник",
                            Region = "Плевен"
                        },
                        new
                        {
                            Id = 79,
                            Name = "Долни чифлик",
                            Region = "Варна"
                        },
                        new
                        {
                            Id = 80,
                            Name = "Доспат",
                            Region = "Смолян"
                        },
                        new
                        {
                            Id = 81,
                            Name = "Драгоман",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 82,
                            Name = "Дряново",
                            Region = "Габрово"
                        },
                        new
                        {
                            Id = 83,
                            Name = "Дулово",
                            Region = "Силистра"
                        },
                        new
                        {
                            Id = 84,
                            Name = "Дунавци",
                            Region = "Видин"
                        },
                        new
                        {
                            Id = 85,
                            Name = "Дупница",
                            Region = "Кюстендил"
                        },
                        new
                        {
                            Id = 86,
                            Name = "Дългопол",
                            Region = "Варна"
                        },
                        new
                        {
                            Id = 87,
                            Name = "Елена",
                            Region = "Велико Търново"
                        },
                        new
                        {
                            Id = 88,
                            Name = "Елин Пелин",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 89,
                            Name = "Елхово",
                            Region = "Ямбол"
                        },
                        new
                        {
                            Id = 90,
                            Name = "Етрополе",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 91,
                            Name = "Завет",
                            Region = "Разград"
                        },
                        new
                        {
                            Id = 92,
                            Name = "Земен",
                            Region = "Перник"
                        },
                        new
                        {
                            Id = 93,
                            Name = "Златарица",
                            Region = "Велико Търново"
                        },
                        new
                        {
                            Id = 94,
                            Name = "Златица",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 95,
                            Name = "Златоград",
                            Region = "Смолян"
                        },
                        new
                        {
                            Id = 96,
                            Name = "Ивайловград",
                            Region = "Хасково"
                        },
                        new
                        {
                            Id = 97,
                            Name = "Игнатиево",
                            Region = "Варна"
                        },
                        new
                        {
                            Id = 98,
                            Name = "Искър",
                            Region = "Плевен"
                        },
                        new
                        {
                            Id = 99,
                            Name = "Исперих",
                            Region = "Разград"
                        },
                        new
                        {
                            Id = 100,
                            Name = "Ихтиман",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 101,
                            Name = "Каблешково",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 102,
                            Name = "Каварна",
                            Region = "Добрич"
                        },
                        new
                        {
                            Id = 103,
                            Name = "Казанлък",
                            Region = "Стара Загора"
                        },
                        new
                        {
                            Id = 104,
                            Name = "Калофер",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 105,
                            Name = "Камено",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 106,
                            Name = "Каолиново",
                            Region = "Шумен"
                        },
                        new
                        {
                            Id = 107,
                            Name = "Карлово",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 108,
                            Name = "Карнобат",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 109,
                            Name = "Каспичан",
                            Region = "Шумен"
                        },
                        new
                        {
                            Id = 110,
                            Name = "Кермен",
                            Region = "Сливен"
                        },
                        new
                        {
                            Id = 111,
                            Name = "Килифарево",
                            Region = "Велико Търново"
                        },
                        new
                        {
                            Id = 112,
                            Name = "Китен",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 113,
                            Name = "Клисура",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 114,
                            Name = "Кнежа",
                            Region = "Плевен"
                        },
                        new
                        {
                            Id = 115,
                            Name = "Козлодуй",
                            Region = "Враца"
                        },
                        new
                        {
                            Id = 116,
                            Name = "Койнаре",
                            Region = "Плевен"
                        },
                        new
                        {
                            Id = 117,
                            Name = "Копривщица",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 118,
                            Name = "Костандово",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = 119,
                            Name = "Костенец",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 120,
                            Name = "Костинброд",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 121,
                            Name = "Котел",
                            Region = "Сливен"
                        },
                        new
                        {
                            Id = 122,
                            Name = "Кочериново",
                            Region = "Кюстендил"
                        },
                        new
                        {
                            Id = 123,
                            Name = "Кресна",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = 124,
                            Name = "Криводол",
                            Region = "Враца"
                        },
                        new
                        {
                            Id = 125,
                            Name = "Кричим",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 126,
                            Name = "Крумовград",
                            Region = "Кърджали"
                        },
                        new
                        {
                            Id = 127,
                            Name = "Крън",
                            Region = "Стара Загора"
                        },
                        new
                        {
                            Id = 128,
                            Name = "Кубрат",
                            Region = "Разград"
                        },
                        new
                        {
                            Id = 129,
                            Name = "Куклен",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 130,
                            Name = "Кула",
                            Region = "Видин"
                        },
                        new
                        {
                            Id = 131,
                            Name = "Кърджали",
                            Region = "Кърджали"
                        },
                        new
                        {
                            Id = 132,
                            Name = "Кюстендил",
                            Region = "Кюстендил"
                        },
                        new
                        {
                            Id = 133,
                            Name = "Левски",
                            Region = "Плевен"
                        },
                        new
                        {
                            Id = 134,
                            Name = "Летница",
                            Region = "Ловеч"
                        },
                        new
                        {
                            Id = 135,
                            Name = "Ловеч",
                            Region = "Ловеч"
                        },
                        new
                        {
                            Id = 136,
                            Name = "Лозница",
                            Region = "Разград"
                        },
                        new
                        {
                            Id = 137,
                            Name = "Лом",
                            Region = "Монтана"
                        },
                        new
                        {
                            Id = 138,
                            Name = "Луковит",
                            Region = "Ловеч"
                        },
                        new
                        {
                            Id = 139,
                            Name = "Лъки",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 140,
                            Name = "Любимец",
                            Region = "Хасково"
                        },
                        new
                        {
                            Id = 141,
                            Name = "Лясковец",
                            Region = "Велико Търново"
                        },
                        new
                        {
                            Id = 142,
                            Name = "Мадан",
                            Region = "Смолян"
                        },
                        new
                        {
                            Id = 143,
                            Name = "Маджарово",
                            Region = "Хасково"
                        },
                        new
                        {
                            Id = 144,
                            Name = "Малко Търново",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 145,
                            Name = "Мартен",
                            Region = "Русе"
                        },
                        new
                        {
                            Id = 146,
                            Name = "Мездра",
                            Region = "Враца"
                        },
                        new
                        {
                            Id = 147,
                            Name = "Мелник",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = 148,
                            Name = "Меричлери",
                            Region = "Хасково"
                        },
                        new
                        {
                            Id = 149,
                            Name = "Мизия",
                            Region = "Враца"
                        },
                        new
                        {
                            Id = 150,
                            Name = "Момин проход",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 151,
                            Name = "Момчилград",
                            Region = "Кърджали"
                        },
                        new
                        {
                            Id = 152,
                            Name = "Монтана",
                            Region = "Монтана"
                        },
                        new
                        {
                            Id = 153,
                            Name = "Мъглиж",
                            Region = "Стара Загора"
                        },
                        new
                        {
                            Id = 154,
                            Name = "Неделино",
                            Region = "Смолян"
                        },
                        new
                        {
                            Id = 155,
                            Name = "Несебър",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 156,
                            Name = "Николаево",
                            Region = "Стара Загора"
                        },
                        new
                        {
                            Id = 157,
                            Name = "Никопол",
                            Region = "Плевен"
                        },
                        new
                        {
                            Id = 158,
                            Name = "Нова Загора",
                            Region = "Сливен"
                        },
                        new
                        {
                            Id = 159,
                            Name = "Нови Искър",
                            Region = "София град"
                        },
                        new
                        {
                            Id = 160,
                            Name = "Нови пазар",
                            Region = "Шумен"
                        },
                        new
                        {
                            Id = 161,
                            Name = "Обзор",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 162,
                            Name = "Омуртаг",
                            Region = "Търговище"
                        },
                        new
                        {
                            Id = 163,
                            Name = "Опака",
                            Region = "Търговище"
                        },
                        new
                        {
                            Id = 164,
                            Name = "Оряхово",
                            Region = "Враца"
                        },
                        new
                        {
                            Id = 165,
                            Name = "Павел баня",
                            Region = "Стара Загора"
                        },
                        new
                        {
                            Id = 166,
                            Name = "Павликени",
                            Region = "Велико Търново"
                        },
                        new
                        {
                            Id = 167,
                            Name = "Пазарджик",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = 168,
                            Name = "Панагюрище",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = 169,
                            Name = "Перник",
                            Region = "Перник"
                        },
                        new
                        {
                            Id = 170,
                            Name = "Перущица",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 171,
                            Name = "Петрич",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = 172,
                            Name = "Пещера",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = 173,
                            Name = "Пирдоп",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 174,
                            Name = "Плачковци",
                            Region = "Габрово"
                        },
                        new
                        {
                            Id = 175,
                            Name = "Плевен",
                            Region = "Плевен"
                        },
                        new
                        {
                            Id = 176,
                            Name = "Плиска",
                            Region = "Шумен"
                        },
                        new
                        {
                            Id = 177,
                            Name = "Пловдив",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 178,
                            Name = "Полски Тръмбеш",
                            Region = "Велико Търново"
                        },
                        new
                        {
                            Id = 179,
                            Name = "Поморие",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 180,
                            Name = "Попово",
                            Region = "Търговище"
                        },
                        new
                        {
                            Id = 181,
                            Name = "Пордим",
                            Region = "Плевен"
                        },
                        new
                        {
                            Id = 182,
                            Name = "Правец",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 183,
                            Name = "Приморско",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 184,
                            Name = "Провадия",
                            Region = "Варна"
                        },
                        new
                        {
                            Id = 185,
                            Name = "Първомай",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 186,
                            Name = "Раднево",
                            Region = "Стара Загора"
                        },
                        new
                        {
                            Id = 187,
                            Name = "Радомир",
                            Region = "Перник"
                        },
                        new
                        {
                            Id = 188,
                            Name = "Разград",
                            Region = "Разград"
                        },
                        new
                        {
                            Id = 189,
                            Name = "Разлог",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = 190,
                            Name = "Ракитово",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = 191,
                            Name = "Раковски",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 192,
                            Name = "Рила",
                            Region = "Кюстендил"
                        },
                        new
                        {
                            Id = 193,
                            Name = "Роман",
                            Region = "Враца"
                        },
                        new
                        {
                            Id = 194,
                            Name = "Рудозем",
                            Region = "Смолян"
                        },
                        new
                        {
                            Id = 195,
                            Name = "Русе",
                            Region = "Русе"
                        },
                        new
                        {
                            Id = 196,
                            Name = "Садово",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 197,
                            Name = "Самоков",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 198,
                            Name = "Сандански",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = 199,
                            Name = "Сапарева баня",
                            Region = "Кюстендил"
                        },
                        new
                        {
                            Id = 200,
                            Name = "Свети Влас",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 201,
                            Name = "Свиленград",
                            Region = "Хасково"
                        },
                        new
                        {
                            Id = 202,
                            Name = "Свищов",
                            Region = "Велико Търново"
                        },
                        new
                        {
                            Id = 203,
                            Name = "Своге",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 204,
                            Name = "Севлиево",
                            Region = "Габрово"
                        },
                        new
                        {
                            Id = 205,
                            Name = "Сеново",
                            Region = "Русе"
                        },
                        new
                        {
                            Id = 206,
                            Name = "Септември",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = 207,
                            Name = "Силистра",
                            Region = "Силистра"
                        },
                        new
                        {
                            Id = 208,
                            Name = "Симеоновград",
                            Region = "Хасково"
                        },
                        new
                        {
                            Id = 209,
                            Name = "Симитли",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = 210,
                            Name = "Славяново",
                            Region = "Плевен"
                        },
                        new
                        {
                            Id = 211,
                            Name = "Сливен",
                            Region = "Сливен"
                        },
                        new
                        {
                            Id = 212,
                            Name = "Сливница",
                            Region = "Софийска"
                        },
                        new
                        {
                            Id = 213,
                            Name = "Сливо поле",
                            Region = "Русе"
                        },
                        new
                        {
                            Id = 214,
                            Name = "Смолян",
                            Region = "Смолян"
                        },
                        new
                        {
                            Id = 215,
                            Name = "Смядово",
                            Region = "Шумен"
                        },
                        new
                        {
                            Id = 216,
                            Name = "Созопол",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 217,
                            Name = "Сопот",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 218,
                            Name = "София",
                            Region = "София град"
                        },
                        new
                        {
                            Id = 219,
                            Name = "Средец",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 220,
                            Name = "Стамболийски",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 221,
                            Name = "Стара Загора",
                            Region = "Стара Загора"
                        },
                        new
                        {
                            Id = 222,
                            Name = "Стражица",
                            Region = "Велико Търново"
                        },
                        new
                        {
                            Id = 223,
                            Name = "Стралджа",
                            Region = "Ямбол"
                        },
                        new
                        {
                            Id = 224,
                            Name = "Стрелча",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = 225,
                            Name = "Суворово",
                            Region = "Варна"
                        },
                        new
                        {
                            Id = 226,
                            Name = "Сунгурларе",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 227,
                            Name = "Сухиндол",
                            Region = "Велико Търново"
                        },
                        new
                        {
                            Id = 228,
                            Name = "Съединение",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 229,
                            Name = "Сърница",
                            Region = "Пазарджик"
                        },
                        new
                        {
                            Id = 230,
                            Name = "Твърдица",
                            Region = "Сливен"
                        },
                        new
                        {
                            Id = 231,
                            Name = "Тервел",
                            Region = "Добрич"
                        },
                        new
                        {
                            Id = 232,
                            Name = "Тетевен",
                            Region = "Ловеч"
                        },
                        new
                        {
                            Id = 233,
                            Name = "Тополовград",
                            Region = "Хасково"
                        },
                        new
                        {
                            Id = 234,
                            Name = "Троян",
                            Region = "Ловеч"
                        },
                        new
                        {
                            Id = 235,
                            Name = "Трън",
                            Region = "Перник"
                        },
                        new
                        {
                            Id = 236,
                            Name = "Тръстеник",
                            Region = "Плевен"
                        },
                        new
                        {
                            Id = 237,
                            Name = "Трявна",
                            Region = "Габрово"
                        },
                        new
                        {
                            Id = 238,
                            Name = "Тутракан",
                            Region = "Силистра"
                        },
                        new
                        {
                            Id = 239,
                            Name = "Търговище",
                            Region = "Търговище"
                        },
                        new
                        {
                            Id = 240,
                            Name = "Угърчин",
                            Region = "Ловеч"
                        },
                        new
                        {
                            Id = 241,
                            Name = "Хаджидимово",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = 242,
                            Name = "Харманли",
                            Region = "Хасково"
                        },
                        new
                        {
                            Id = 243,
                            Name = "Хасково",
                            Region = "Хасково"
                        },
                        new
                        {
                            Id = 244,
                            Name = "Хисаря",
                            Region = "Пловдив"
                        },
                        new
                        {
                            Id = 245,
                            Name = "Цар Калоян",
                            Region = "Разград"
                        },
                        new
                        {
                            Id = 246,
                            Name = "Царево",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 247,
                            Name = "Чепеларе",
                            Region = "Смолян"
                        },
                        new
                        {
                            Id = 248,
                            Name = "Червен бряг",
                            Region = "Плевен"
                        },
                        new
                        {
                            Id = 249,
                            Name = "Черноморец",
                            Region = "Бургас"
                        },
                        new
                        {
                            Id = 250,
                            Name = "Чипровци",
                            Region = "Монтана"
                        },
                        new
                        {
                            Id = 251,
                            Name = "Чирпан",
                            Region = "Стара Загора"
                        },
                        new
                        {
                            Id = 252,
                            Name = "Шабла",
                            Region = "Добрич"
                        },
                        new
                        {
                            Id = 253,
                            Name = "Шивачево",
                            Region = "Сливен"
                        },
                        new
                        {
                            Id = 254,
                            Name = "Шипка",
                            Region = "Стара Загора"
                        },
                        new
                        {
                            Id = 255,
                            Name = "Шумен",
                            Region = "Шумен"
                        },
                        new
                        {
                            Id = 256,
                            Name = "Ябланица",
                            Region = "Ловеч"
                        },
                        new
                        {
                            Id = 257,
                            Name = "Якоруда",
                            Region = "Благоевград"
                        },
                        new
                        {
                            Id = 258,
                            Name = "Ямбол",
                            Region = "Ямбол"
                        });
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.NewsArticle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Primary key.");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasComment("Date of creation.");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The image of the news article.");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(240)
                        .HasColumnType("nvarchar(240)")
                        .HasComment("News article name.");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("The news article's text.");

                    b.HasKey("Id");

                    b.ToTable("NewsArticles");

                    b.HasComment("News article");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Primary key.");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Name of the subject.");

                    b.Property<int>("SubjectTypeId")
                        .HasColumnType("int")
                        .HasComment("Type of the subject.");

                    b.HasKey("Id");

                    b.HasIndex("SubjectTypeId");

                    b.ToTable("Subjects");

                    b.HasComment("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db67d17e-f125-4cb1-8f96-f73c216f23cc"),
                            Name = "Математика",
                            SubjectTypeId = 1
                        },
                        new
                        {
                            Id = new Guid("f3c074a3-2e39-40fc-b49b-02ca3954ed08"),
                            Name = "Български език",
                            SubjectTypeId = 2
                        },
                        new
                        {
                            Id = new Guid("43ab2b43-76c5-4e66-ab0c-5c340e4c6fc4"),
                            Name = "Английски език",
                            SubjectTypeId = 2
                        },
                        new
                        {
                            Id = new Guid("2b2d26ac-0b47-41d9-b70f-d1d6a59eb010"),
                            Name = "Информационни технологии",
                            SubjectTypeId = 3
                        });
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.SubjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key.");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Subject type.");

                    b.HasKey("Id");

                    b.ToTable("SubjectTypes");

                    b.HasComment("Subject type");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Академични"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Езици"
                        },
                        new
                        {
                            Id = 3,
                            Type = "ИТ"
                        });
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.Training", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Primary key.");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Name of the training.");

                    b.Property<int>("TrainingTypeId")
                        .HasColumnType("int")
                        .HasComment("Type of the training.");

                    b.HasKey("Id");

                    b.HasIndex("TrainingTypeId");

                    b.ToTable("Trainings");

                    b.HasComment("Trainings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3bb389cd-3576-477c-8135-ccf8f234bc05"),
                            Name = "Карате",
                            TrainingTypeId = 1
                        },
                        new
                        {
                            Id = new Guid("ee4454fe-75a1-440c-981e-80033f379570"),
                            Name = "Кикбокс",
                            TrainingTypeId = 1
                        },
                        new
                        {
                            Id = new Guid("afe7edfa-6465-4191-b28a-466824e4f087"),
                            Name = "Таекуондо",
                            TrainingTypeId = 1
                        },
                        new
                        {
                            Id = new Guid("3c36ceba-7516-4376-80c0-95758438cb01"),
                            Name = "Баскетбол",
                            TrainingTypeId = 2
                        },
                        new
                        {
                            Id = new Guid("7677e8d9-c9b3-4ca3-94a0-aea85c6a006a"),
                            Name = "Футбол",
                            TrainingTypeId = 2
                        },
                        new
                        {
                            Id = new Guid("1872554f-3a5f-4507-b1c0-e33a7752a5e1"),
                            Name = "Волейбол",
                            TrainingTypeId = 2
                        });
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.TrainingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key.");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Training type.");

                    b.HasKey("Id");

                    b.ToTable("TrainingTypes");

                    b.HasComment("Training type");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Бойни спортове"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Спортове с топка"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.ApplicationUserCourse", b =>
                {
                    b.HasOne("LessonsBg.Core.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationUsersCourses")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LessonsBg.Core.Data.Models.Course", "Course")
                        .WithMany("ApplicationUsersCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.ApplicationUserSubject", b =>
                {
                    b.HasOne("LessonsBg.Core.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationUsersSubjects")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LessonsBg.Core.Data.Models.Subject", "Subject")
                        .WithMany("ApplicationUsersSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.ApplicationUserTraining", b =>
                {
                    b.HasOne("LessonsBg.Core.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationUsersTrainings")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LessonsBg.Core.Data.Models.Training", "Training")
                        .WithMany("ApplicationUsersTrainings")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.BlogComment", b =>
                {
                    b.HasOne("LessonsBg.Core.Data.Models.ApplicationUser", "Author")
                        .WithMany("BlogComments")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LessonsBg.Core.Data.Models.BlogPost", "BlogPost")
                        .WithMany("BlogComments")
                        .HasForeignKey("BlogPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("BlogPost");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.Course", b =>
                {
                    b.HasOne("LessonsBg.Core.Data.Models.CourseType", "CourseType")
                        .WithMany("Courses")
                        .HasForeignKey("CourseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LessonsBg.Core.Data.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseType");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.Subject", b =>
                {
                    b.HasOne("LessonsBg.Core.Data.Models.SubjectType", "SubjectType")
                        .WithMany("Subjects")
                        .HasForeignKey("SubjectTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubjectType");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.Training", b =>
                {
                    b.HasOne("LessonsBg.Core.Data.Models.TrainingType", "TrainingType")
                        .WithMany("Trainings")
                        .HasForeignKey("TrainingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainingType");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LessonsBg.Core.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LessonsBg.Core.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LessonsBg.Core.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LessonsBg.Core.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.ApplicationUser", b =>
                {
                    b.Navigation("ApplicationUsersCourses");

                    b.Navigation("ApplicationUsersSubjects");

                    b.Navigation("ApplicationUsersTrainings");

                    b.Navigation("BlogComments");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.BlogPost", b =>
                {
                    b.Navigation("BlogComments");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.Course", b =>
                {
                    b.Navigation("ApplicationUsersCourses");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.CourseType", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.Subject", b =>
                {
                    b.Navigation("ApplicationUsersSubjects");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.SubjectType", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.Training", b =>
                {
                    b.Navigation("ApplicationUsersTrainings");
                });

            modelBuilder.Entity("LessonsBg.Core.Data.Models.TrainingType", b =>
                {
                    b.Navigation("Trainings");
                });
#pragma warning restore 612, 618
        }
    }
}
